name: 'Build and Push Docker Image to Amazon ECR'
description: 'This action builds a docker image and optionally pushes it to Amazon ECR.'
author: 'Masashi Tsuru'

inputs:
  IMAGE_TAG:
    description: 'docker image tag'
    required: false
  PUSH_IMAGE:
    description: 'Whether to push the Docker image to ECR (true/false)'
    required: true
    default: 'false'
  AWS_REGION:
    description: 'AWS region (required if PUSH_IMAGE is true)'
    required: false
  AWS_ROLE_ARN:
    description: 'AWS role ARN (required if PUSH_IMAGE is true)'
    required: false
  AWS_REGISTRY:
    description: 'AWS ECR registry (required if PUSH_IMAGE is true)'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Validate required inputs for ECR
      if: ${{ inputs.PUSH_IMAGE == 'true' }}
      shell: bash
      run: |
        if [[ -z "${{ inputs.AWS_REGION }}" || -z "${{ inputs.AWS_ROLE_ARN }}" || -z "${{ inputs.AWS_REGISTRY }}" ]]; then
          echo "Error: AWS_REGION, AWS_ROLE_ARN, and AWS_REGISTRY must be provided when PUSH_IMAGE is true."
          exit 1
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

    - name: Restore docker build cache
      id: cache
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        path: /tmp/.buildx-cache
        key: docker-build-cache-${{ github.ref_name }}-${{ github.sha }}
        restore-keys: |
          docker-build-cache-${{ github.ref_name }}-
          docker-build-cache-

    - name: Create cache directories
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p /tmp/.buildx-cache/webapp-php
        mkdir -p /tmp/.buildx-cache/webapp-nginx

    - name: Configure AWS credentials (if PUSH_IMAGE is true)
      if: ${{ inputs.PUSH_IMAGE == 'true' }}
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
      with:
        role-to-assume: ${{ inputs.AWS_ROLE_ARN }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Login to Amazon ECR (if PUSH_IMAGE is true)
      if: ${{ inputs.PUSH_IMAGE == 'true' }}
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

    - name: Build and Push image
      uses: docker/bake-action@3fc70e1131fee40a422dd8dd0ff22014ae20a1f3 # v5.11.0
      with:
        push: ${{ inputs.PUSH_IMAGE == 'true' }}
        load: true
        set: |
          *.platform=linux/amd64
          app.cache-from=type=local,src=/tmp/.buildx-cache/webapp-php
          app.cache-to=type=local,dest=/tmp/.buildx-cache/webapp-php,mode=max
          webserver.cache-from=type=local,src=/tmp/.buildx-cache/webapp-nginx
          webserver.cache-to=type=local,dest=/tmp/.buildx-cache/webapp-nginx,mode=max
      env:
        DOCKER_BUILD_RECORD_UPLOAD: false            # to use in docker/bake-action
        REGISTRY_HOST: ${{ inputs.AWS_REGISTRY }}    # to use in compose.yaml
        TAG: ${{ inputs.IMAGE_TAG }}                 # to use in compose.yaml
